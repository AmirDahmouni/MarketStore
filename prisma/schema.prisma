// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
  isAdmin  Boolean  @default(false)
  points   Int      @default(0)
  favoris  Favori[] // One-to-many relation with Favori
}

model Favori {
  id        Int     @id @default(autoincrement())
  category  String?
  indicator Int
  userId    Int
  user      User    @relation(fields: [userId], references: [id]) // Many-to-one relation with User
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Decimal  @db.Decimal(10, 2)
  stock       Int
  orderId     Int      // Foreign key field for relation with Order
  order       Order    @relation(fields: [orderId], references: [id])
}

model Order {
  id       Int       @id @default(autoincrement())
  total    Decimal   @db.Decimal(10, 2)
  products Product[] // One-to-many relationship with Product
}

model Order {
  id          String   @id @default(uuid()) @db.Uuid
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  products    Product[] @relation("OrderProducts")
  totalAmount Float    @db.Decimal
  createdAt   DateTime @default(now()) @db.Timestamp(6)
  isPending   Boolean  @default(true)

  @@index([userId])
}
